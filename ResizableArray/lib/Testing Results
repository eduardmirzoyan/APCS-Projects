First Wave Function Test:
1, 2, 3,  size = 3
1, 2, 3, 4, 5, 6,  size = 6
1, 3, 4, 5, 7,  size = 5
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Full Function Test:
1, 1, 2, 3, 5, 8, 13, 
0
4
6
-1
true
false
Caught exception from a bad insert (this is a good thing). Message: Index out of bounds: 10 for value: 5
Caught exception from a bad remove (this is also a good thing). Message: Index out of bounds: 10
1, 1, 2, 3, 5, 8, 13, 
true
[1, 5, 2, 3, 5, 8, 13]
1, 1, 2, 3, 5, 8, 13, 
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Efficiency Tests:
10:
The test took 7 milliseconds.
And 480 bytes of memory.

Your ResizableArray contains the following: 
Footprint{Objects=2, References=1, Primitives=[int x 112]}


100:
The test took 7 milliseconds.
And 880 bytes of memory.

Your ResizableArray contains the following: 
Footprint{Objects=2, References=1, Primitives=[int x 212]}


1000:
The test took 42 milliseconds.
And 8080 bytes of memory.

Your ResizableArray contains the following: 
Footprint{Objects=2, References=1, Primitives=[int x 2012]}


10000:
The test took 81 milliseconds.
And 80080 bytes of memory.

Your ResizableArray contains the following: 
Footprint{Objects=2, References=1, Primitives=[int x 20012]}


100000:
The test took 5669 milliseconds.
And 800080 bytes of memory.

Your ResizableArray contains the following: 
Footprint{Objects=2, References=1, Primitives=[int x 200012]}
